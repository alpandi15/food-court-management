{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nconst Input = ({\n  id,\n  label,\n  placeholder,\n  type = 'text',\n  meta: {\n    touched,\n    error\n  },\n  contentStyle,\n  iconName,\n  className = undefined,\n  iconClassName,\n  active = false,\n  input\n}) => {\n  return __jsx(\"div\", {\n    style: contentStyle,\n    className: \"input-field col\"\n  }, iconName ? __jsx(\"i\", {\n    className: `material-icons prefix ${iconClassName}`\n  }, iconName) : null, __jsx(\"input\", _extends({\n    id: id,\n    type: type,\n    placeholder: placeholder,\n    className: touched ? error ? `${className} invalid` : `${className} valid` : className\n  }, input)), __jsx(\"label\", {\n    htmlFor: id,\n    className: active ? 'active' : ''\n  }, label), touched && error && __jsx(\"span\", {\n    className: \"helper-text\",\n    \"data-error\": error,\n    \"data-success\": \"Valid\"\n  }));\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}