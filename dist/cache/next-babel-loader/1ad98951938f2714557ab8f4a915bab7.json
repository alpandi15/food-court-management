{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FETCH_AUTH, RECEIVE_AUTH, FAILED_AUTH, FETCH_LOGOUT_USER, FAILED_CHANGE_ACCOUNT, FETCH_CHANGE_ACCOUNT, RECEIVE_CHANGE_ACCOUNT } from \"../../actions/types\";\nconst initialState = {\n  loading: false,\n  currentItem: {},\n  list: [],\n  meta: {},\n  error: false,\n  message: ''\n};\nexport default ((state = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_AUTH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: false\n      });\n\n    case RECEIVE_AUTH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: false,\n        message: '',\n        currentItem: action.payload.currentItem\n      });\n\n    case FAILED_AUTH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: true,\n        message: action.payload.error\n      });\n\n    case FETCH_LOGOUT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: false,\n        currentItem: {}\n      });\n\n    case FETCH_CHANGE_ACCOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: false\n      });\n\n    case RECEIVE_CHANGE_ACCOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: false\n      });\n\n    case FAILED_CHANGE_ACCOUNT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: true,\n        errorMessage: action.payload.error\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}