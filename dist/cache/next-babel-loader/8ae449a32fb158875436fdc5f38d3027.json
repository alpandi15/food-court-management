{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { getAccessToken } from \"./storage\";\nimport { APIURL } from \"./url\";\nexport async function request({\n  fullUrl = false,\n  url,\n  data,\n  auth = false,\n  requiredToken = false,\n  responseHtml = false,\n  headers = {\n    'Content-Type': 'application/json'\n  },\n  params = {},\n  type = 'json',\n  method,\n  guard = 'user'\n}) {\n  const useUrl = fullUrl ? url : `${APIURL}${url}`;\n  const token = getAccessToken(guard);\n\n  switch (type) {\n    case 'json':\n      {\n        headers = {\n          'Content-Type': 'application/json'\n        };\n        break;\n      }\n\n    case 'form-data':\n      {\n        headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        break;\n      }\n\n    default:\n  }\n\n  if (!token && auth && !requiredToken || typeof token === 'object' && auth && !requiredToken) {\n    return {\n      success: false,\n      message: 'Unauthenticated'\n    };\n  }\n\n  if (auth && !!token) {\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  let response = {};\n\n  try {\n    switch (method) {\n      case 'get':\n        {\n          response = await axios.get(`${useUrl}`, {\n            maxContentLength: 2000,\n            params: _objectSpread(_objectSpread({}, data), params),\n            headers\n          });\n          break;\n        }\n\n      case 'post':\n        {\n          response = await axios.post(`${useUrl}`, data, {\n            params,\n            headers\n          });\n          break;\n        }\n\n      case 'put':\n        {\n          response = await axios.put(`${useUrl}`, data, {\n            headers\n          });\n          break;\n        }\n\n      case 'delete':\n        {\n          response = await axios.delete(`${useUrl}`, {\n            data,\n            headers\n          });\n          break;\n        }\n\n      default:\n    }\n\n    if (responseHtml) {\n      return Promise.resolve({\n        success: true,\n        data: response.data\n      });\n    }\n\n    return Promise.resolve(_objectSpread({\n      success: true\n    }, response.data));\n  } catch (error) {\n    const {\n      response\n    } = error;\n    let msg;\n    let dat;\n    let statusCode;\n    let detailData = '';\n\n    if (response && response instanceof Object) {\n      const {\n        data,\n        statusText\n      } = response;\n      statusCode = response.status;\n      const {\n        detail\n      } = data;\n      detailData = detail;\n      msg = data.message || statusText;\n      dat = _objectSpread({}, data) || {};\n    } else {\n      statusCode = 600;\n\n      if (Object.prototype.hasOwnProperty.call(error, 'message')) {\n        msg = error.message || 'Network Error';\n      } else {\n        msg = error;\n      }\n    }\n\n    return {\n      success: false,\n      detail: detailData,\n      statusCode,\n      message: msg,\n      data: dat\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}