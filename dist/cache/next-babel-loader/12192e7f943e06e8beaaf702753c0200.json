{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-materialize';\nimport { Field, reduxForm, getFormValues, reset } from 'redux-form';\nimport TextInput from 'components/Form/Input';\nimport { changePassword } from 'actions/account/accountAction';\nimport { toastify } from 'components/Toast/Toastify';\nimport { GUARD_OWNER } from '../../../constants';\n\nconst validate = ({\n  password_old,\n  password,\n  password_confirm\n}) => {\n  const error = {\n    password_old: !password_old ? '*Required' : password_old.length < 6 ? 'Password Min 6 Character' : password_old.length > 50 ? 'Password Max 50 Character' : undefined,\n    password: !password ? '*Required' : password.length < 6 ? 'Password Min 6 Character' : password.length > 50 ? 'Password Max 50 Character' : undefined,\n    password_confirm: !password_confirm ? '*Required' : password_confirm !== password ? 'Cannot Match' : password_confirm.length > 50 ? 'Password Max 50 Character' : undefined\n  };\n  return error;\n};\n\nconst ModalEdit = ({\n  invalid,\n  submitting,\n  handleSubmit,\n  changePassword,\n  resetForm,\n  onCloseModal\n}) => {\n  const onSubmit = async values => {\n    const result = await changePassword({\n      new_password: values.password,\n      old_password: values.password_old\n    }, GUARD_OWNER);\n\n    if (result.success) {\n      onCloseModal(false);\n      toastify({\n        type: 'success',\n        message: result.data\n      });\n      resetForm();\n    } else {\n      toastify({\n        type: 'error',\n        message: result.message\n      });\n    }\n\n    console.log('Response Update ', result);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-content-owner\"\n  }, __jsx(\"div\", {\n    className: \"modal-title\"\n  }, \"Ganti Kata Sandi\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"form-modal\"\n  }, __jsx(\"div\", null, __jsx(Field, {\n    id: \"password_old\",\n    name: \"password_old\",\n    label: \"Kata Sandi Lama\",\n    type: \"password\",\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", null, __jsx(Field, {\n    id: \"password\",\n    name: \"password\",\n    label: \"Kata Sandi Baru\",\n    type: \"password\",\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", null, __jsx(Field, {\n    id: \"password_confirm\",\n    name: \"password_confirm\",\n    label: \"Konfirmasi Kata Sandi Baru\",\n    type: \"password\",\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: \"modal-footer-owner\"\n  }, __jsx(Button, {\n    className: \"waves-effect waves-light red\",\n    modal: \"close\",\n    type: \"button\",\n    node: \"button\",\n    style: {\n      color: 'red !important'\n    },\n    disabled: submitting\n  }, \"Batal\"), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn\",\n    node: \"button\"\n  }, \"Simpan\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    values: getFormValues('FormEditProfil')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changePassword: (data, guard) => dispatch(changePassword(data, guard)),\n  resetForm: () => dispatch(reset('FormEditProfil'))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormEditProfil',\n  enableReinitialize: true,\n  validate\n})(ModalEdit));","map":null,"metadata":{},"sourceType":"module"}