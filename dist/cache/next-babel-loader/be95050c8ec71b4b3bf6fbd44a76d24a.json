{"ast":null,"code":"import { apiUpload } from \"../../services/utils/imageService\";\nimport { FETCH_IMAGE, FAILED_IMAGE, SUCCESS_IMAGE } from \"../types\";\n\nconst fetch = () => {\n  return {\n    type: FETCH_IMAGE\n  };\n};\n\nconst success = (data, meta) => {\n  return {\n    type: SUCCESS_IMAGE,\n    payload: {\n      data,\n      meta\n    }\n  };\n};\n\nconst failed = error => {\n  return {\n    type: FAILED_IMAGE,\n    payload: {\n      errorMessage: typeof error === 'object' ? error.message : error\n    }\n  };\n};\n/**\n *\n * @param {String} type\n * @param {String} image\n */\n\n\nconst uploadImage = (type = 'product', image) => async dispatch => {\n  try {\n    dispatch(fetch());\n\n    if (!type) {\n      return dispatch(failed('Type is Required'));\n    }\n\n    if (!image) {\n      return dispatch(failed('Image is Required'));\n    }\n\n    const formData = new FormData();\n    formData.append('file', image);\n    const response = await apiUpload(type, formData);\n\n    if (response.success) {\n      dispatch(success(response.data, response.meta));\n      return response.data.filename;\n    }\n\n    dispatch(failed(response));\n    throw response;\n  } catch (error) {\n    dispatch(failed(error));\n    throw error;\n  }\n};\n\nexport { uploadImage };","map":null,"metadata":{},"sourceType":"module"}