{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport socketIOClient from 'socket.io-client'; // import { Link } from 'react-router-dom'\n\nimport { Link as LinkScroll } from 'react-scroll';\nimport OrderPreview from \"../../components/OrderPreview\";\nimport SearchInput from \"../../components/Form/SearchInput\";\nimport color from \"../../theme/color\";\nimport Header from \"../../components/Header\";\nimport { getStandMenu } from \"../../actions/product/productAction\";\nimport Voucher from \"../../static/Icon/voucher.svg\";\nimport image from \"../../static/Image/food-court.jpg\";\nimport SearchModal from \"./search\";\nconst ENDPOINT = 'http://192.168.3.65:3000';\nconst categories = [{\n  id: 1,\n  name: 'Rekomendasi'\n}, {\n  id: 2,\n  name: 'Minuman'\n}, {\n  id: 3,\n  name: '2 Liter'\n}, {\n  id: 4,\n  name: 'Dessert'\n}, {\n  id: 5,\n  name: '23 Ribu'\n}, {\n  id: 6,\n  name: 'Pedas'\n}, {\n  id: 7,\n  name: 'Ramuan'\n}, {\n  id: 8,\n  name: 'Tongkat Ali'\n}];\nconst products = [{\n  id: 1,\n  categoryId: 1,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 2,\n  categoryId: 1,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 3,\n  categoryId: 1,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 4,\n  categoryId: 1,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 5,\n  categoryId: 1,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 6,\n  categoryId: 1,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 7,\n  categoryId: 2,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 8,\n  categoryId: 2,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 9,\n  categoryId: 2,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 10,\n  categoryId: 3,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 11,\n  categoryId: 3,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 12,\n  categoryId: 3,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 13,\n  categoryId: 4,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 14,\n  categoryId: 4,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 15,\n  categoryId: 4,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 16,\n  categoryId: 5,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 17,\n  categoryId: 5,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 18,\n  categoryId: 5,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}, {\n  id: 19,\n  categoryId: 5,\n  name: 'Classic Milk Tea (S) + Bubble',\n  price: 19000,\n  description: 'Fresh milk tea with bubble'\n}];\n\nconst Menu = ({\n  getStandMenu\n}) => {\n  const params = useParams();\n  const [modal, setModal] = React.useState(false);\n  const [fav, setFav] = React.useState(false);\n  const [listProduct, setListProduct] = React.useState([]);\n  const [headerActive, setHeaderActive] = React.useState(false);\n  React.useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.pageYOffset > 250) {\n        setHeaderActive(true);\n      } else {\n        setHeaderActive(false);\n      }\n    });\n\n    const fetch = async () => {\n      console.log('Masuk Effect ', params);\n\n      if (params && params.uuid) {\n        const socket = socketIOClient(ENDPOINT);\n        await getStandMenu(params.uuid);\n        socket.on(params.uuid, data => {\n          console.log('Socket Data Detail ', data);\n        });\n      }\n    };\n\n    const groupList = () => {\n      setListProduct(() => {\n        return products.reduce((r, a) => {\n          r[a.categoryId] = [...(r[a.categoryId] || []), a];\n          return r;\n        }, []);\n      });\n    };\n\n    fetch();\n    groupList();\n  }, [params.uuid, getStandMenu]);\n\n  const handleFavorite = () => {\n    setFav(!fav);\n  };\n\n  console.log('TER GRUB ', listProduct);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    transparent: !headerActive,\n    textStyle: {\n      color: color.primaryColor,\n      backgroundColor: color.white,\n      borderRadius: '10px',\n      width: '60px',\n      height: '45px',\n      marginRight: '.5rem'\n    }\n  }, __jsx(SearchInput, {\n    onClick: () => setModal(true),\n    placeholder: \"Cari Menu\",\n    disabled: true\n  })), __jsx(\"div\", {\n    className: `category ${headerActive ? 'scroll' : ''}`\n  }, __jsx(\"div\", {\n    className: \"category-wrapper\"\n  }, __jsx(\"ul\", null, categories && categories.map((val, index) => {\n    return __jsx(\"li\", {\n      key: index\n    }, __jsx(LinkScroll, {\n      to: `sectionId-${val.id}`,\n      activeClass: \"active\",\n      spy: true,\n      smooth: true,\n      duration: 500,\n      offset: -100\n    }, val.name));\n  })))), __jsx(\"div\", {\n    className: \"mobile-layout-content\"\n  }, __jsx(\"div\", {\n    className: \"food-court-image\"\n  }, __jsx(\"img\", {\n    src: image,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"div\", {\n    className: \"content-header\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Zeribowl\"), __jsx(\"div\", {\n    className: \"sub-title\"\n  }, \"Minuman\")), __jsx(\"div\", null, __jsx(\"div\", {\n    onClick: handleFavorite,\n    className: `waves-effect favourite-icon ${fav ? 'active' : ''}`\n  }))), __jsx(\"div\", {\n    className: \"content-body\"\n  }, __jsx(\"div\", {\n    className: \"voucher\"\n  }, __jsx(\"div\", {\n    className: \"voucher-icon\"\n  }, __jsx(\"img\", {\n    className: \"icon-24\",\n    src: Voucher,\n    alt: \"\"\n  })), __jsx(\"div\", null, __jsx(\"span\", null, \"Lihat voucher stand ini\")), __jsx(\"div\", {\n    className: \"button\"\n  }, __jsx(Link, {\n    to: \"/zeribowl/voucher\",\n    className: \"btn btn-app-outline x-small waves-effect\"\n  }, \"Buka\"))), __jsx(\"div\", {\n    className: \"menu\"\n  }, listProduct && listProduct.length !== 0 && listProduct.map((val, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"section-content\",\n      id: `sectionId-${index}`\n    }, __jsx(\"div\", {\n      className: \"category-name\"\n    }, __jsx(\"div\", null, categories.find(e => e.id === index).name)), val.map((list, indexL) => __jsx(\"div\", {\n      className: \"menu-item\",\n      key: indexL\n    }, __jsx(Link, {\n      to: \"/zeribowl/menu/1\"\n    }, __jsx(\"div\", {\n      className: \"menu-wrapper waves-effect\"\n    }, __jsx(\"div\", {\n      className: \"menu-image\"\n    }, __jsx(\"img\", {\n      src: image,\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"menu-desc\"\n    }, __jsx(\"div\", {\n      className: \"menu-name\"\n    }, list.name), __jsx(\"div\", {\n      className: \"menu-short-desc\"\n    }, list.description), __jsx(\"div\", {\n      className: \"menu-price\"\n    }, `Rp. ${list.price}`)))))));\n  }))))), __jsx(OrderPreview, null), __jsx(SearchModal, {\n    open: modal,\n    onHide: setModal\n  }));\n};\n\nconst mapStateToProps = state => {\n  const {\n    standStore\n  } = state;\n  return {\n    loadingData: standStore.loading,\n    currentItem: standStore.currentItem\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getStandMenu: (id, guard) => dispatch(getStandMenu(id, guard))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","map":null,"metadata":{},"sourceType":"module"}