{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Select } from 'react-materialize';\n\nconst Selection = ({\n  label,\n  className,\n  options = [],\n  multiple = false,\n  onChange,\n  defaultValue,\n  browserDefault,\n  meta: {\n    touched,\n    error\n  },\n  input\n}) => {\n  return __jsx(React.Fragment, null, touched && error && __jsx(\"span\", {\n    className: \"helper-text\",\n    \"data-error\": error,\n    \"data-success\": \"Valid\"\n  }), __jsx(Select, _extends({\n    id: \"Select-9\",\n    className: className,\n    label: label,\n    multiple: multiple,\n    noLayout: true,\n    browserDefault: browserDefault,\n    onChange: onChange\n  }, input, {\n    options: {\n      classes: '',\n      dropdownOptions: {\n        alignment: 'left',\n        autoTrigger: true,\n        closeOnClick: true,\n        constrainWidth: true,\n        coverTrigger: true,\n        hover: false,\n        inDuration: 150,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: null,\n        onOpenStart: null,\n        outDuration: 250\n      }\n    },\n    value: defaultValue\n  }), options && options.map((val, index) => __jsx(\"option\", {\n    value: val.value,\n    key: index\n  }, val.label))));\n};\n\nexport default Selection;","map":null,"metadata":{},"sourceType":"module"}