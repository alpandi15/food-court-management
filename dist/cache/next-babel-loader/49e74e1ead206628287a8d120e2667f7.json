{"ast":null,"code":"import _extends from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useDrag } from 'react-use-gesture';\nimport { Link } from 'react-router-dom';\nimport { useSpring, a, config } from 'react-spring';\nimport menuIcon from \"../../static/Icon/Menu.svg\";\nimport notifIcon from \"../../static/Icon/Notif.svg\";\nvar width = -270;\n\nvar SideNav = function SideNav() {\n  console.log('RERENDERING....');\n\n  var _useSpring = useSpring(function () {\n    return {\n      x: width\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      x = _useSpring2[0].x,\n      set = _useSpring2[1];\n\n  var open = function open(_ref) {\n    var canceled = _ref.canceled;\n    console.log('OPEN BRO'); // when cancel is true, it means that the user passed the upwards threshold\n    // so we change the spring config to create a nice wobbly effect\n\n    set({\n      x: 0,\n      immediate: false,\n      config: canceled ? config.wobbly : config.stiff\n    });\n  };\n\n  var close = function close() {\n    var velocity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    console.log('On Closed ');\n    set({\n      x: width,\n      immediate: false,\n      config: _objectSpread(_objectSpread({}, config.stiff), {}, {\n        velocity: velocity\n      })\n    });\n  };\n\n  var bind = useDrag(function (_ref2) {\n    var last = _ref2.last,\n        _ref2$vxvy = _slicedToArray(_ref2.vxvy, 1),\n        vx = _ref2$vxvy[0],\n        _ref2$movement = _slicedToArray(_ref2.movement, 1),\n        mx = _ref2$movement[0],\n        cancel = _ref2.cancel,\n        canceled = _ref2.canceled;\n\n    console.log('MX ', mx); // console.log('VX ', vx)\n\n    console.log('LAST ', last); // if the user drags up passed a threshold, then we cancel\n    // the drag so that the sheet resets to its open position\n\n    if (mx > 70) {\n      console.log('CANCEL ', mx);\n      cancel(); // eslint-disable-next-line brace-style\n    } // when the user releases the sheet, we check whether it passed\n    // the threshold for it to close, or if we reset it to its open positino\n\n\n    if (last) {\n      console.log('IN LAST ', mx, width * 0.5); // if (mx > width * 0.5 || vx > 0.5) {\n\n      if (mx < width * 0.5) {\n        close(vx);\n      } else {\n        open({\n          canceled: canceled\n        });\n      } // eslint-disable-next-line brace-style\n\n    } // when the user keeps dragging, we just move the sheet according to\n    // the cursor position\n    else set({\n        x: mx,\n        immediate: false\n      });\n  }, {\n    initial: function initial() {\n      return [x.get(), 0];\n    },\n    filterTaps: true,\n    bounds: {\n      right: 0\n    },\n    rubberband: true\n  });\n  var callBind = React.useCallback(bind, []);\n  var callOpen = React.useCallback(open, []);\n  var display = x.to(function (px) {\n    return px > width ? 'block' : 'none';\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"main-stand-header\"\n  }, __jsx(\"div\", {\n    className: \"menu-burger waves-effect\",\n    onClick: callOpen\n  }, __jsx(\"img\", {\n    src: menuIcon,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"notification has-notif\"\n  }, __jsx(Link, {\n    to: \"#\"\n  }, __jsx(\"img\", {\n    src: notifIcon,\n    alt: \"\"\n  })))), __jsx(a.div, _extends({}, callBind(), {\n    style: {\n      display: display,\n      x: x\n    },\n    className: \"side-nav\"\n  }), \"Ini sidenav\"));\n};\n\nexport default SideNav;","map":null,"metadata":{},"sourceType":"module"}