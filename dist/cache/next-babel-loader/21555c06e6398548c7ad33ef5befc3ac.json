{"ast":null,"code":"import _regeneratorRuntime from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Field, reduxForm // reset\n} from 'redux-form';\nimport TextInput from 'components/Form/Input'; // import ImageUploader from 'components/Form/ImageUploader'\n\nimport Layout from 'components/Owner/layout';\nimport CustomeHelmet from 'components/CustomHelmet';\nimport { getOne as _getOne, edit as _edit } from 'actions/categoryStand/categoryStandAction'; // import { get } from 'services/utils/storage'\n\nimport { toastify } from 'components/Toast/Toastify';\nimport { GUARD_OWNER } from '../../../constants';\nvar MemoLayout = /*#__PURE__*/React.memo(Layout);\n\nvar validate = function validate(_ref) {\n  var name = _ref.name;\n  var error = {\n    name: !name ? '*Required' : name.length < 3 ? 'Name Min 3 Character' : undefined\n  };\n  return error;\n};\n\nvar FormEdit = function FormEdit(_ref2) {\n  var invalid = _ref2.invalid,\n      submitting = _ref2.submitting,\n      handleSubmit = _ref2.handleSubmit,\n      edit = _ref2.edit,\n      getOne = _ref2.getOne,\n      currentItem = _ref2.currentItem;\n  var history = useHistory();\n  var params = useParams();\n  React.useEffect(function () {\n    var fetch = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getOne(params.id, GUARD_OWNER);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetch() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    fetch();\n  }, [getOne]); // Submit Edit\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(currentItem && currentItem.id)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 3;\n              return edit(currentItem.id, {\n                name: values.name\n              }, GUARD_OWNER);\n\n            case 3:\n              result = _context2.sent;\n\n              if (result.success) {\n                toastify({\n                  type: 'success',\n                  message: result.meta.message\n                });\n                history.push('/owner/category-stand');\n              } else {\n                toastify({\n                  type: 'error',\n                  message: result.message\n                });\n              }\n\n              _context2.next = 8;\n              break;\n\n            case 7:\n              toastify({\n                type: 'error',\n                message: 'Id tidak ditemukan'\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(MemoLayout, null, __jsx(CustomeHelmet, {\n    title: \"Edit Category Stand\"\n  }), __jsx(\"div\", {\n    className: \"owner-content\"\n  }, __jsx(\"div\", {\n    className: \"header-title\"\n  }, __jsx(\"div\", {\n    className: \"header-content\"\n  }, __jsx(\"h5\", null, \"Edit Kategori Stand\"))), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \"form-stand\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col s12 m12 l6 stand\"\n  }, __jsx(\"div\", {\n    className: \"title-info\"\n  }, \"Informasi Kategori\"), __jsx(Field, {\n    id: \"name\",\n    name: \"name\",\n    label: \"Nama Kategori\",\n    type: \"text\",\n    component: TextInput,\n    active: true\n  })))), __jsx(\"div\", {\n    className: \"button-submit-control\"\n  }, __jsx(\"button\", {\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn btn-app bg-pimary\"\n  }, \"Simpan\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return history.goBack();\n    },\n    className: \"btn btn-app-outline waves-effect\"\n  }, \"Batal\"))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var categoryStandStore = state.categoryStandStore;\n  return {\n    loadingData: categoryStandStore.loading,\n    currentItem: categoryStandStore.currentItem,\n    initialValues: {\n      name: categoryStandStore && categoryStandStore.currentItem.name\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    edit: function edit(id, data, guard) {\n      return dispatch(_edit(id, data, guard));\n    },\n    getOne: function getOne(id, guard) {\n      return dispatch(_getOne(id, guard));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormEditCategoryStandOwner',\n  enableReinitialize: true,\n  validate: validate\n})(FormEdit));","map":null,"metadata":{},"sourceType":"module"}