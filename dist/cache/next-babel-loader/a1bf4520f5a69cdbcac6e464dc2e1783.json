{"ast":null,"code":"import { set, remove } from \"../../services/utils/storage\";\nimport { apiRegister, apiLogin, apiGetProfile } from \"../../services/auth/registerService\";\nimport { FETCH_AUTH, RECEIVE_AUTH, FAILED_AUTH, FETCH_LOGOUT_USER } from \"../types\";\nimport { FOODCOURT_SELECTED } from \"../../constants\";\n\nconst fetch = () => {\n  return {\n    type: FETCH_AUTH\n  };\n};\n\nconst receive = data => {\n  return {\n    type: RECEIVE_AUTH,\n    payload: {\n      currentItem: data\n    }\n  };\n};\n\nconst logout = () => {\n  return {\n    type: FETCH_LOGOUT_USER\n  };\n};\n\nconst failed = error => {\n  return {\n    type: FAILED_AUTH,\n    payload: {\n      error: typeof error === 'object' ? error.message : error\n    }\n  };\n}; // Register User\n\n\nconst registerUser = data => async dispatch => {\n  try {\n    dispatch(fetch());\n    const response = await apiRegister(data);\n\n    if (response && response.success) {\n      dispatch(receive(response.data));\n\n      if (response && response.data) {\n        return response;\n      }\n    } else {\n      dispatch(failed(response));\n      return response;\n    }\n  } catch (error) {\n    dispatch(failed(error));\n    return error;\n  }\n}; // Login\n\n\nconst loginUser = (data, guard = 'user') => async dispatch => {\n  try {\n    dispatch(fetch());\n    const response = await apiLogin(data);\n    console.log('Login Data ', response, guard);\n\n    if (response && response.success) {\n      dispatch(receive(response.data));\n\n      if (response && response.data) {\n        await set(`access_token_${guard}`, response.data.access_token);\n        await set(`refresh_token_${guard}`, response.data.refresh_token);\n        return response;\n      }\n    } else {\n      dispatch(failed(response));\n      return response;\n    }\n  } catch (error) {\n    dispatch(failed(error));\n    return error;\n  }\n}; // Logout\n\n\nconst logoutUser = guard => async dispatch => {\n  await remove(`access_token_${guard}`);\n  await remove(`refresh_token_${guard}`);\n\n  if (guard === 'owner') {\n    await remove(FOODCOURT_SELECTED);\n  }\n\n  dispatch(logout());\n}; // Get user token\n\n\nconst getUserData = guard => async dispatch => {\n  console.log('USER TOKEN ', guard);\n  const response = await apiGetProfile(guard);\n\n  if (response.success) {\n    dispatch(receive(response.data));\n    return response;\n  }\n\n  await remove(`access_token_${guard}`);\n  await remove(`refresh_token_${guard}`);\n  dispatch(failed(response));\n  return response;\n};\n\nexport { registerUser, loginUser, logoutUser, getUserData };","map":null,"metadata":{},"sourceType":"module"}