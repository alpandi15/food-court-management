{"ast":null,"code":"import _regeneratorRuntime from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-materialize';\nimport { Field, reduxForm, getFormValues, reset } from 'redux-form';\nimport TextInput from 'components/Form/Input';\nimport ImageUploader from 'components/Form/ImageUploader';\nimport { updateProfile as _updateProfile } from 'actions/account/accountAction';\nimport { toastify } from 'components/Toast/Toastify';\nimport { GUARD_OWNER } from '../../../constants';\n\nvar validate = function validate(_ref) {\n  var name = _ref.name,\n      username = _ref.username,\n      phone = _ref.phone;\n  var error = {\n    username: !username ? '*Required' : username.length < 3 ? 'Username Min 3 Character' : undefined,\n    name: !name ? '*Required' : name.length < 3 ? 'Name Min 3 Character' : undefined,\n    phone: !phone ? '*Required' : !/^[+0-9]+[0-9]+$/.test(phone) ? 'Use phone number format' : phone.length < 10 ? 'Min 10 Character' : phone.length > 15 ? 'Max 15 Character' : undefined\n  };\n  return error;\n};\n\nvar ModalEdit = function ModalEdit(_ref2) {\n  var invalid = _ref2.invalid,\n      submitting = _ref2.submitting,\n      handleSubmit = _ref2.handleSubmit,\n      updateProfile = _ref2.updateProfile,\n      currentItem = _ref2.currentItem,\n      resetForm = _ref2.resetForm,\n      onCloseModal = _ref2.onCloseModal;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var name, username, phone, other, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(values);\n              name = values.name, username = values.username, phone = values.phone, other = _objectWithoutProperties(values, [\"name\", \"username\", \"phone\"]);\n\n              if (other && currentItem && currentItem.image && other.image === currentItem.image.url) {\n                other.imageRaw = currentItem.image.raw;\n                other.image = currentItem.image.raw;\n              }\n\n              _context.next = 5;\n              return updateProfile(_objectSpread({\n                name: name,\n                username: username !== currentItem.username ? username : undefined,\n                phone: phone\n              }, other), GUARD_OWNER);\n\n            case 5:\n              result = _context.sent;\n\n              if (result.success) {\n                onCloseModal(false);\n                toastify({\n                  type: 'success',\n                  message: result.data\n                });\n                resetForm();\n              } else {\n                toastify({\n                  type: 'error',\n                  message: result.message\n                });\n              }\n\n              console.log('Response Update ', result);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-content-owner\"\n  }, __jsx(\"div\", {\n    className: \"modal-title\"\n  }, \"Ubah Profile\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"form-modal\"\n  }, __jsx(\"div\", {\n    className: \"image-user\"\n  }, __jsx(Field, {\n    type: \"file\",\n    contentClass: \"\",\n    className: \"team-logo\",\n    name: \"image\",\n    id: \"image\",\n    label: \"Cover Food Court\",\n    component: ImageUploader,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", null, __jsx(Field, {\n    id: \"name\",\n    name: \"name\",\n    label: \"Nama Food Court\",\n    type: \"text\",\n    active: true,\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", null, __jsx(Field, {\n    id: \"username\",\n    name: \"username\",\n    label: \"Username\",\n    type: \"text\",\n    active: true,\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", null, __jsx(Field, {\n    id: \"phone\",\n    name: \"phone\",\n    label: \"Nomor Telp\",\n    type: \"text\",\n    active: true,\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: \"modal-footer-owner\"\n  }, __jsx(Button, {\n    className: \"waves-effect waves-light red\",\n    modal: \"close\",\n    type: \"button\",\n    node: \"button\",\n    style: {\n      color: 'red !important'\n    },\n    disabled: submitting\n  }, \"Batal\"), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn\",\n    node: \"button\"\n  }, \"Simpan\")))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var currentItem = state.accountStore.currentItem;\n  return {\n    values: getFormValues('FormEditProfilOwner')(state),\n    currentItem: currentItem,\n    initialValues: {\n      image: currentItem && currentItem.image && currentItem.image.raw ? currentItem.image.url : undefined,\n      name: currentItem && currentItem.name,\n      username: currentItem && currentItem.username,\n      phone: currentItem && currentItem.phone\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateProfile: function updateProfile(data, guard) {\n      return dispatch(_updateProfile(data, guard));\n    },\n    resetForm: function resetForm() {\n      return dispatch(reset('FormEditProfilOwner'));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormEditProfilOwner',\n  enableReinitialize: true,\n  validate: validate\n})(ModalEdit));","map":null,"metadata":{},"sourceType":"module"}