{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, getFormValues } from 'redux-form';\nimport { loginUser, logoutUser, getUserData } from \"../../actions/auth/authAction\";\nimport Header from \"../../components/Header\";\nimport TextInput from \"../../components/Form/Input\";\nimport { toastify } from \"../../components/Toast/Toastify\";\nconst Background = 'static/Image/bg.svg';\n\nconst validate = ({\n  email,\n  password\n}) => {\n  const error = {\n    email: !email ? '*Required' : email.length > 50 ? 'Username Max 50 Character' : undefined,\n    password: !password ? '*Required' : password.length < 6 ? 'Password Min 6 Character' : password.length > 50 ? 'Password Max 50 Character' : undefined\n  };\n  return error;\n};\n\nconst GUARD = 'stand';\n\nconst standAuth = ({\n  invalid,\n  loading,\n  submitting,\n  handleSubmit,\n  loginUser,\n  getUserData,\n  logoutUser\n}) => {\n  const history = useHistory();\n\n  const onSubmit = async values => {\n    console.log('submit ', submitting, loading, invalid);\n    const result = await loginUser({\n      username: values.email,\n      password: values.password\n    }, GUARD);\n    console.log('RESPONSE USER ', result);\n\n    if (result.success) {\n      const resUser = await getUserData(GUARD);\n      console.log('GET USER ', resUser);\n\n      if (resUser.success) {\n        if (resUser.data && resUser.data.roleId === 4) {\n          toastify({\n            type: 'success',\n            message: result.meta.message\n          });\n          history.push('/stand/home');\n        } else {\n          logoutUser(GUARD);\n          toastify({\n            type: 'error',\n            message: 'Unauthenticated'\n          });\n        }\n      } else {\n        toastify({\n          type: 'error',\n          message: 'Login Error'\n        });\n      }\n    } else {\n      toastify({\n        type: 'error',\n        message: result.message\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    transparent: true\n  }), __jsx(\"div\", {\n    className: \"mobile-layout-content with-header\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(\"div\", {\n    className: \"background\"\n  }, __jsx(\"img\", {\n    className: \"rotate-75\",\n    src: Background,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"text\"\n  }, __jsx(\"div\", {\n    className: \"main-text\"\n  }, \"Masuk ke\", __jsx(\"br\", null), \"Akun Stand Kamu\"), __jsx(\"div\", null, \"Gunakan akun stand yang telah didaftarkan oleh admin food court.\")), __jsx(\"div\", {\n    className: \"image with-text login-stand\"\n  }, __jsx(\"img\", {\n    src: \"static/Image/login_stand.png\",\n    alt: \"\"\n  })))), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \"form-login\"\n  }, __jsx(Field, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email / Username\",\n    type: \"text\",\n    component: TextInput\n  }), __jsx(Field, {\n    id: \"password\",\n    name: \"password\",\n    label: \"Kata Sandi\",\n    type: \"password\",\n    component: TextInput\n  })), __jsx(\"div\", {\n    className: \"fixed-button\"\n  }, __jsx(\"button\", {\n    disabled: invalid || submitting || loading,\n    className: \"waves-effect waves-light btn btn-app\"\n  }, \"Masuk\"), __jsx(\"div\", {\n    className: \"forgot-password\"\n  }, __jsx(Link, {\n    to: \"/forgot-password\",\n    className: \"color-primary waves-effect\"\n  }, \"Lupa Password\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    values: getFormValues('FormLogin')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser: (data, guard) => dispatch(loginUser(data, guard)),\n  getUserData: guard => dispatch(getUserData(guard)),\n  logoutUser: guard => dispatch(logoutUser(guard))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormLogin',\n  validate\n})(standAuth));","map":null,"metadata":{},"sourceType":"module"}