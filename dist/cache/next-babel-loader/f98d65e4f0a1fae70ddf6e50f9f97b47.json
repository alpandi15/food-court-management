{"ast":null,"code":"import _regeneratorRuntime from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Field, reduxForm // reset\n} from 'redux-form';\nimport TextInput from 'components/Form/Input'; // import ImageUploader from 'components/Form/ImageUploader'\n\nimport Layout from 'components/Owner/layout';\nimport CustomeHelmet from 'components/CustomHelmet';\nimport { add as _add } from 'actions/categoryStand/categoryStandAction';\nimport { get } from 'services/utils/storage';\nimport { toastify } from 'components/Toast/Toastify';\nimport { GUARD_OWNER, FOODCOURT_SELECTED } from '../../../constants';\nvar MemoLayout = /*#__PURE__*/React.memo(Layout);\n\nvar validate = function validate(_ref) {\n  var name = _ref.name;\n  var error = {\n    name: !name ? '*Required' : name.length < 3 ? 'Name Min 3 Character' : undefined\n  };\n  return error;\n};\n\nvar FormAdd = function FormAdd(_ref2) {\n  var invalid = _ref2.invalid,\n      submitting = _ref2.submitting,\n      handleSubmit = _ref2.handleSubmit,\n      add = _ref2.add;\n  var history = useHistory();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var foodCourtId, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(FOODCOURT_SELECTED);\n\n            case 2:\n              foodCourtId = _context.sent;\n              _context.next = 5;\n              return add(_objectSpread(_objectSpread({}, values), {}, {\n                foodCourtId: foodCourtId\n              }), GUARD_OWNER);\n\n            case 5:\n              result = _context.sent;\n\n              if (result.success) {\n                toastify({\n                  type: 'success',\n                  message: result.meta.message\n                });\n                history.push('/owner/category-stand');\n              } else {\n                toastify({\n                  type: 'error',\n                  message: result.message\n                });\n              }\n\n              console.log(values, foodCourtId);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(MemoLayout, null, __jsx(CustomeHelmet, {\n    title: \"Create Category Stand\"\n  }), __jsx(\"div\", {\n    className: \"owner-content\"\n  }, __jsx(\"div\", {\n    className: \"header-title\"\n  }, __jsx(\"div\", {\n    className: \"header-content\"\n  }, __jsx(\"h5\", null, \"Tambah Kategori Stand\"))), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \"form-stand\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col s12 m12 l6 stand\"\n  }, __jsx(\"div\", {\n    className: \"title-info\"\n  }, \"Informasi Kategori\"), __jsx(Field, {\n    id: \"name\",\n    name: \"name\",\n    label: \"Nama Kategori\",\n    type: \"text\",\n    component: TextInput\n  })))), __jsx(\"button\", {\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn btn-app bg-pimary\"\n  }, \"Simpan\")))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add: function add(data, guard) {\n      return dispatch(_add(data, guard));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(reduxForm({\n  form: 'FormAddCategoryStandOwner',\n  validate: validate\n})(FormAdd));","map":null,"metadata":{},"sourceType":"module"}