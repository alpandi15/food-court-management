{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, getFormValues } from 'redux-form';\nimport { forgotPassword } from \"../../actions/auth/forgotAction\";\nimport { toastify } from \"../../components/Toast/Toastify\";\nimport Background from \"../../../static/Image/bg.svg\";\nimport Header from \"../../components/Header\";\nimport TextInput from \"../../components/Form/Input\";\nimport image from \"../../../static/Image/lock.png\";\n\nconst validate = ({\n  email\n}) => {\n  const error = {\n    email: !email ? '*Required' : !/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,4}$/.test(email) ? 'Use email format' : email.length > 50 ? 'Username Max 50 Character' : undefined\n  };\n  return error;\n};\n\nconst ForgotPassword = ({\n  invalid,\n  loading,\n  submitting,\n  handleSubmit,\n  forgotPassword\n}) => {\n  const history = useHistory;\n\n  const onSubmit = async values => {\n    console.log(values);\n    const result = await forgotPassword({\n      account: values.email\n    });\n\n    if (result.success) {\n      toastify({\n        type: 'success',\n        message: result.meta.message\n      });\n      history.push('/forgot-password/verification');\n    } else if (typeof result.detail === 'object') {\n      toastify({\n        type: 'info',\n        message: result.message\n      });\n      history.push('/forgot-password/verification');\n    } else {\n      toastify({\n        type: 'error',\n        message: result.message\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    transparent: true\n  }), __jsx(\"div\", {\n    className: \"mobile-layout-content with-header\"\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"header\"\n  }, __jsx(\"div\", {\n    className: \"background\"\n  }, __jsx(\"img\", {\n    className: \"rotate-75\",\n    src: Background,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"text\"\n  }, __jsx(\"div\", {\n    className: \"main-text\"\n  }, \"Lupa\", __jsx(\"br\", null), \"Password\")), __jsx(\"div\", {\n    className: \"image with-text forgot\"\n  }, __jsx(\"img\", {\n    src: image,\n    alt: \"\"\n  })))), __jsx(\"div\", null, \"Lupa password ?\"), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"p\", null, \"Masukkan alamat email terdaftar kamu, kami akan mengirimkan link untuk mereset kata sandi\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \"form-login\"\n  }, __jsx(Field, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    component: TextInput\n  })), __jsx(\"div\", {\n    className: \"fixed-button\"\n  }, __jsx(\"button\", {\n    disabled: invalid || submitting || loading,\n    className: \"waves-effect waves-light btn btn-app bg-grey\"\n  }, \"Kirim\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    values: getFormValues('FormForgotPassword')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  forgotPassword: email => dispatch(forgotPassword(email))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormForgotPassword',\n  validate\n})(ForgotPassword));","map":null,"metadata":{},"sourceType":"module"}