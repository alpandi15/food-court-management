{"ast":null,"code":"import _regeneratorRuntime from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-materialize';\nimport { Field, reduxForm, getFormValues, reset } from 'redux-form';\nimport TextInput from 'components/Form/Input';\nimport { changeEmail as _changeEmail } from 'actions/account/accountAction';\nimport { toastify } from 'components/Toast/Toastify';\nimport { GUARD_OWNER } from '../../../constants';\n\nvar validate = function validate(_ref) {\n  var email = _ref.email;\n  var error = {\n    email: !email ? '*Required' : !/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,4}$/.test(email) ? 'Use email format' : email.length > 50 ? 'Username Max 50 Character' : undefined\n  };\n  return error;\n};\n\nvar ModalEdit = function ModalEdit(_ref2) {\n  var invalid = _ref2.invalid,\n      submitting = _ref2.submitting,\n      handleSubmit = _ref2.handleSubmit,\n      changeEmail = _ref2.changeEmail,\n      resetForm = _ref2.resetForm,\n      onCloseModal = _ref2.onCloseModal;\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return changeEmail({\n                email: values.email\n              }, GUARD_OWNER);\n\n            case 2:\n              result = _context.sent;\n\n              if (result.success) {\n                onCloseModal(false);\n                toastify({\n                  type: 'success',\n                  message: result.data\n                });\n                resetForm();\n              } else {\n                toastify({\n                  type: 'error',\n                  message: result.message\n                });\n              }\n\n              console.log('Response Update ', result);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-content-owner\"\n  }, __jsx(\"div\", {\n    className: \"modal-title\"\n  }, \"Ganti E-Mail\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"form-modal\"\n  }, __jsx(\"div\", null, __jsx(Field, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email Baru\",\n    type: \"email\",\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: \"modal-footer-owner\"\n  }, __jsx(Button, {\n    className: \"waves-effect waves-light red\",\n    modal: \"close\",\n    type: \"button\",\n    node: \"button\",\n    style: {\n      color: 'red !important'\n    },\n    disabled: submitting\n  }, \"Batal\"), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn\",\n    node: \"button\"\n  }, \"Simpan\")))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    values: getFormValues('FormEditEmailOwner')(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeEmail: function changeEmail(data, guard) {\n      return dispatch(_changeEmail(data, guard));\n    },\n    resetForm: function resetForm() {\n      return dispatch(reset('FormEditEmailOwner'));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormEditEmailOwner',\n  enableReinitialize: true,\n  validate: validate\n})(ModalEdit));","map":null,"metadata":{},"sourceType":"module"}