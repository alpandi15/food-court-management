{"ast":null,"code":"import _regeneratorRuntime from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pandi95/Projects/React/blog-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { apiForgotPassword } from \"../../services/auth/forgotService\";\nimport { FETCH_FORGOT_PASSWORD, RECEIVE_ITEM_FORGOT_PASSWORD, FAILED_FORGOT_PASSWORD } from \"../types\";\n\nvar fetch = function fetch() {\n  return {\n    type: FETCH_FORGOT_PASSWORD\n  };\n};\n\nvar receiveItem = function receiveItem(currentItem, meta) {\n  return {\n    type: RECEIVE_ITEM_FORGOT_PASSWORD,\n    payload: {\n      currentItem: currentItem,\n      meta: meta\n    }\n  };\n};\n\nvar failed = function failed(error) {\n  return {\n    type: FAILED_FORGOT_PASSWORD,\n    payload: {\n      errorMessage: typeof error === 'object' ? error.message : error\n    }\n  };\n};\n\nvar forgotPassword = function forgotPassword(value) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(fetch());\n              _context.next = 4;\n              return apiForgotPassword('email', value);\n\n            case 4:\n              response = _context.sent;\n\n              if (!(response && response.success)) {\n                _context.next = 8;\n                break;\n              }\n\n              dispatch(receiveItem(response, response.meta));\n              return _context.abrupt(\"return\", response);\n\n            case 8:\n              dispatch(failed(response));\n              return _context.abrupt(\"return\", response);\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(failed(_context.t0));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexport { forgotPassword };","map":null,"metadata":{},"sourceType":"module"}