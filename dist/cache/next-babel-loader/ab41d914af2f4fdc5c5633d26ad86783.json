{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Field, reduxForm // reset\n} from 'redux-form';\nimport TextInput from \"../../../components/Form/Input\"; // import ImageUploader from 'components/Form/ImageUploader'\n\nimport Layout from \"../../../components/Owner/layout\";\nimport CustomeHelmet from \"../../../components/CustomHelmet\";\nimport { getOne, edit } from \"../../../actions/categoryStand/categoryStandAction\"; // import { get } from 'services/utils/storage'\n\nimport { toastify } from \"../../../components/Toast/Toastify\";\nimport { GUARD_OWNER } from \"../../../constants\";\nconst MemoLayout = /*#__PURE__*/React.memo(Layout);\n\nconst validate = ({\n  name\n}) => {\n  const error = {\n    name: !name ? '*Required' : name.length < 3 ? 'Name Min 3 Character' : undefined\n  };\n  return error;\n};\n\nconst FormEdit = ({\n  invalid,\n  submitting,\n  handleSubmit,\n  edit,\n  getOne,\n  currentItem\n}) => {\n  const history = useHistory();\n  const params = useParams();\n  React.useEffect(() => {\n    const fetch = async () => {\n      await getOne(params.id, GUARD_OWNER);\n    };\n\n    fetch();\n  }, [getOne]); // Submit Edit\n\n  const onSubmit = async values => {\n    if (currentItem && currentItem.id) {\n      const result = await edit(currentItem.id, {\n        name: values.name\n      }, GUARD_OWNER);\n\n      if (result.success) {\n        toastify({\n          type: 'success',\n          message: result.meta.message\n        });\n        history.push('/owner/category-stand');\n      } else {\n        toastify({\n          type: 'error',\n          message: result.message\n        });\n      }\n    } else {\n      toastify({\n        type: 'error',\n        message: 'Id tidak ditemukan'\n      });\n    }\n  };\n\n  return __jsx(MemoLayout, null, __jsx(CustomeHelmet, {\n    title: \"Edit Category Stand\"\n  }), __jsx(\"div\", {\n    className: \"owner-content\"\n  }, __jsx(\"div\", {\n    className: \"header-title\"\n  }, __jsx(\"div\", {\n    className: \"header-content\"\n  }, __jsx(\"h5\", null, \"Edit Kategori Stand\"))), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \"form-stand\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col s12 m12 l6 stand\"\n  }, __jsx(\"div\", {\n    className: \"title-info\"\n  }, \"Informasi Kategori\"), __jsx(Field, {\n    id: \"name\",\n    name: \"name\",\n    label: \"Nama Kategori\",\n    type: \"text\",\n    component: TextInput,\n    active: true\n  })))), __jsx(\"div\", {\n    className: \"button-submit-control\"\n  }, __jsx(\"button\", {\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn btn-app bg-pimary\"\n  }, \"Simpan\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => history.goBack(),\n    className: \"btn btn-app-outline waves-effect\"\n  }, \"Batal\"))))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    categoryStandStore\n  } = state;\n  return {\n    loadingData: categoryStandStore.loading,\n    currentItem: categoryStandStore.currentItem,\n    initialValues: {\n      name: categoryStandStore && categoryStandStore.currentItem.name\n    }\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  edit: (id, data, guard) => dispatch(edit(id, data, guard)),\n  getOne: (id, guard) => dispatch(getOne(id, guard))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormEditCategoryStandOwner',\n  enableReinitialize: true,\n  validate\n})(FormEdit));","map":null,"metadata":{},"sourceType":"module"}