{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-materialize';\nimport { Field, reduxForm, getFormValues, reset } from 'redux-form';\nimport TextInput from \"../../../components/Form/Input\";\nimport { changeEmail } from \"../../../actions/account/accountAction\";\nimport { toastify } from \"../../../components/Toast/Toastify\";\nimport { GUARD_OWNER } from \"../../../constants\";\n\nconst validate = ({\n  email\n}) => {\n  const error = {\n    email: !email ? '*Required' : !/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[A-Za-z]{2,4}$/.test(email) ? 'Use email format' : email.length > 50 ? 'Username Max 50 Character' : undefined\n  };\n  return error;\n};\n\nconst ModalEdit = ({\n  invalid,\n  submitting,\n  handleSubmit,\n  changeEmail,\n  resetForm,\n  onCloseModal\n}) => {\n  const onSubmit = async values => {\n    const result = await changeEmail({\n      email: values.email\n    }, GUARD_OWNER);\n\n    if (result.success) {\n      onCloseModal(false);\n      toastify({\n        type: 'success',\n        message: result.data\n      });\n      resetForm();\n    } else {\n      toastify({\n        type: 'error',\n        message: result.message\n      });\n    }\n\n    console.log('Response Update ', result);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"modal-content-owner\"\n  }, __jsx(\"div\", {\n    className: \"modal-title\"\n  }, \"Ganti E-Mail\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"form-modal\"\n  }, __jsx(\"div\", null, __jsx(Field, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email Baru\",\n    type: \"email\",\n    component: TextInput,\n    contentStyle: {\n      width: '100%'\n    }\n  })), __jsx(\"div\", {\n    className: \"modal-footer-owner\"\n  }, __jsx(Button, {\n    className: \"waves-effect waves-light red\",\n    modal: \"close\",\n    type: \"button\",\n    node: \"button\",\n    style: {\n      color: 'red !important'\n    },\n    disabled: submitting\n  }, \"Batal\"), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: invalid || submitting,\n    className: \"waves-effect waves-light btn\",\n    node: \"button\"\n  }, \"Simpan\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    values: getFormValues('FormEditEmailOwner')(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeEmail: (data, guard) => dispatch(changeEmail(data, guard)),\n  resetForm: () => dispatch(reset('FormEditEmailOwner'))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  form: 'FormEditEmailOwner',\n  enableReinitialize: true,\n  validate\n})(ModalEdit));","map":null,"metadata":{},"sourceType":"module"}