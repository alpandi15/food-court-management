{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAll, deleteData } from \"../../../actions/stand/standAction\";\nimport Layout from \"../../../components/Owner/layout\";\nimport { get } from \"../../../services/utils/storage\";\nimport { toastify } from \"../../../components/Toast/Toastify\";\nimport { GUARD_OWNER, FOODCOURT_SELECTED } from \"../../../constants\";\nconst InputSearch = /*#__PURE__*/React.lazy(() => import(\"../../../components/Form/SearchInput\"));\nconst Pagination = /*#__PURE__*/React.lazy(() => import(\"../../../components/Pagination\"));\nconst MemoLayout = /*#__PURE__*/React.memo(Layout);\nconst WAIT_INTERVAL = 1000; // const ENTER_KEY = 13\n\nconst limit = 10;\n\nconst Stand = ({\n  getAll,\n  loadingData,\n  listData,\n  pagination,\n  deleteData\n}) => {\n  const [totalPage, setTotalPage] = React.useState(0);\n  const [totalData, setTotalData] = React.useState(0);\n  const [params, setParams] = React.useState({\n    page: 1,\n    keyword: null\n  });\n  React.useEffect(() => {\n    const fetch = async () => {\n      const foodCourtId = await get(FOODCOURT_SELECTED);\n      await getAll(_objectSpread({\n        foodCourtId,\n        sort: '-createdAt',\n        limit\n      }, params), GUARD_OWNER);\n    };\n\n    fetch();\n  }, [getAll, params]);\n  React.useEffect(() => {\n    if (pagination) {\n      setTotalData(pagination.totalData);\n      setTotalPage(pagination.lastPage);\n    }\n  }, [pagination]);\n\n  const onPageChanged = async data => {\n    const {\n      currentPage\n    } = data;\n    setParams({\n      page: Number(currentPage),\n      keyword: params.keyword || null\n    });\n  };\n\n  const debounce = (func, delay) => {\n    let debounceTimer;\n    return function () {\n      const context = this;\n      const args = arguments;\n      clearTimeout(debounceTimer);\n      debounceTimer = setTimeout(() => func.apply(context, args), delay);\n    };\n  };\n\n  let handleChange = event => {\n    event.persist();\n    setParams(_objectSpread(_objectSpread({}, params), {}, {\n      page: 1,\n      sort: '-createdAt',\n      keyword: event.target.value\n    }));\n    console.log('Ini Value ', event.target.value);\n  };\n\n  let onSearch = debounce(handleChange, WAIT_INTERVAL);\n\n  const onDelete = async id => {\n    const confm = window.confirm('Delete this data ?');\n\n    if (confm) {\n      const res = await deleteData(id, GUARD_OWNER);\n\n      if (!res.success) {\n        toastify({\n          type: 'error',\n          message: res.message || res.detail\n        });\n      } else {\n        const foodCourtId = await get(FOODCOURT_SELECTED);\n        await getAll(_objectSpread({\n          foodCourtId,\n          page: 1,\n          sort: '-createdAt'\n        }, params));\n        toastify({\n          type: 'success',\n          message: res.meta.message\n        });\n      }\n    }\n  };\n\n  return __jsx(MemoLayout, null, __jsx(\"div\", {\n    className: \"owner-content\"\n  }, __jsx(\"div\", {\n    className: \"header-title\"\n  }, __jsx(\"div\", {\n    className: \"header-content\"\n  }, __jsx(\"h4\", null, \"Management Stand\"), __jsx(Link, {\n    to: \"/owner/category-stand\",\n    className: \"waves-effect waves-light btn-small\"\n  }, \"Kategori Stand\"))), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"div\", {\n    className: \"list-stand list\"\n  }, __jsx(\"div\", {\n    className: \"search\"\n  }, __jsx(InputSearch, {\n    name: \"search\",\n    placeholder: \"Cari Stand\",\n    onChange: onSearch\n  }), __jsx(\"div\", {\n    className: \"category-stand\"\n  }, __jsx(Link, {\n    to: \"/owner/stand/create\",\n    className: \"btn btn-app-outline waves-effect\"\n  }, \"Tambah Stand\"))), __jsx(\"table\", null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"#\"), __jsx(\"th\", null, \"Nama Stand\"), __jsx(\"th\", null, \"Pemilik Stand\"), __jsx(\"th\", null, \"Tanggal Dibuat\"), __jsx(\"th\", null, \"Operator\"))), __jsx(\"tbody\", null, loadingData && __jsx(\"tr\", null, __jsx(\"td\", {\n    colSpan: \"4\"\n  }, \"Loading...\")), !loadingData && listData && listData.length > 0 && listData.map((val, index) => {\n    return __jsx(\"tr\", {\n      key: index\n    }, __jsx(\"td\", null, index + 1), __jsx(\"td\", null, val.name), __jsx(\"td\", null, val.user), __jsx(\"td\", null, val.createdAt), __jsx(\"td\", {\n      className: \"actions\"\n    }, __jsx(Link, {\n      to: `/owner/stand/view/${val.uuid}`,\n      className: \"btn-action waves-effect\"\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"remove_red_eye\")), __jsx(\"div\", {\n      className: \"btn-action waves-effect\"\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"edit\")), __jsx(\"div\", {\n      className: \"btn-action waves-effect\",\n      onClick: e => onDelete(val.id, e)\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"delete_forever\"))));\n  }))), __jsx(\"div\", {\n    className: \"pagination\"\n  }, !loadingData && totalPage && totalPage > 0 ? __jsx(Pagination, {\n    totalRecords: totalData,\n    pageLimit: limit,\n    pageNeighbours: 1,\n    onPageChanged: onPageChanged,\n    startPage: params.page\n  }) : '')))));\n};\n\nconst mapStateToProps = state => {\n  const {\n    standStore\n  } = state;\n  return {\n    loadingData: standStore.loading,\n    listData: standStore.list,\n    pagination: standStore.meta && standStore.meta.pagination\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getAll: (data, guard) => dispatch(getAll(data, guard)),\n  deleteData: (id, guard) => dispatch(deleteData(id, guard))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stand);","map":null,"metadata":{},"sourceType":"module"}